openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
  description: Generated server url
paths:
  /api/v1/user/update/status:
    put:
      tags:
      - user-controller
      operationId: updateStatusUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStatusUserRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/user/update/password:
    put:
      tags:
      - user-controller
      operationId: updatePasswordUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordUserRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/user/update/info:
    put:
      tags:
      - user-controller
      operationId: updateInfoUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfoUserRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/report/outlaw/update:
    put:
      tags:
      - out-law-report-controller
      operationId: updateOutLawReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutLawReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOutLawReport'
  /api/v1/report/chapter/update:
    put:
      tags:
      - error-chapter-report-controller
      operationId: updateChapterReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateErrorChapterReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseErrorChapterReport'
  /api/v1/privacyPolicy/update:
    put:
      tags:
      - privacy-policy-controller
      operationId: updatePrivacyPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePrivacyPolicyRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePrivacyPolicy'
  /api/v1/manga/update:
    put:
      tags:
      - manga-controller
      operationId: updateManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseManga'
  /api/v1/genre/update:
    put:
      tags:
      - genre-controller
      operationId: updateGenre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGenreRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGenre'
  /api/v1/chapter/update:
    put:
      tags:
      - chapter-controller
      operationId: updateChapter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateChapterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseChapter'
  /api/v1/author/update:
    put:
      tags:
      - author-controller
      operationId: updateAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthorRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAuthor'
  /api/v1/auth/password/update:
    put:
      tags:
      - auth-controller
      operationId: updateAuthPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthPasswordRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUpdateAuthPasswordResponseDTO'
  /api/v1/auth/info/update:
    put:
      tags:
      - auth-controller
      operationId: updateAuthInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfoProfileRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/user/get:
    post:
      tags:
      - user-controller
      operationId: getUserList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserListRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetUserManagementResponseDTO'
  /api/v1/user/detail:
    post:
      tags:
      - user-controller
      operationId: getUserDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserDetailRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetUserManagementResponseDTO'
  /api/v1/report/outlaw/get:
    post:
      tags:
      - out-law-report-controller
      operationId: getOutLawReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListOutLawReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageOutLawReport'
  /api/v1/report/outlaw/detail:
    post:
      tags:
      - out-law-report-controller
      operationId: getOutLawReportDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOutLawReportByIdRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOutLawReport'
  /api/v1/report/outlaw/create:
    post:
      tags:
      - out-law-report-controller
      operationId: createOutLawReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOutLawReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseOutLawReport'
  /api/v1/report/chapter/get:
    post:
      tags:
      - error-chapter-report-controller
      operationId: getListErrorChapterReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListErrorChapterReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageErrorChapterReport'
  /api/v1/report/chapter/detail:
    post:
      tags:
      - error-chapter-report-controller
      operationId: getErrorChapterReportDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetErrorChapterReportByIdRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseErrorChapterReport'
  /api/v1/report/chapter/create:
    post:
      tags:
      - error-chapter-report-controller
      operationId: createChapterReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateErrorChapterReportRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseErrorChapterReport'
  /api/v1/privacyPolicy/detail:
    post:
      tags:
      - privacy-policy-controller
      operationId: getPrivacyPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPrivacyPolicyDetailRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePrivacyPolicy'
  /api/v1/privacyPolicy/create:
    post:
      tags:
      - privacy-policy-controller
      operationId: createPrivacyPolicy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreatePrivacyPolicyRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePrivacyPolicy'
  /api/v1/manga/search/by/name:
    post:
      tags:
      - manga-controller
      operationId: searchMangaByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaByNameRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/manga/search/by/genre:
    post:
      tags:
      - manga-controller
      operationId: searchMangaByGenre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaByGenreRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/manga/search/by/filter:
    post:
      tags:
      - manga-controller
      operationId: searchMangaByFilter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaByFilterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/manga/search/by/author:
    post:
      tags:
      - manga-controller
      operationId: searchMangaByAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaByAuthorDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGetMangaResponseDTO'
  /api/v1/manga/get:
    post:
      tags:
      - manga-controller
      operationId: getMangaList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/manga/get/lastUpload:
    post:
      tags:
      - manga-controller
      operationId: getMangaListByLastUploadChapter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaListByUploadChapterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/manga/detail:
    post:
      tags:
      - manga-controller
      operationId: getMangaDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetMangaDetailRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetMangaResponseDTO'
  /api/v1/manga/create:
    post:
      tags:
      - manga-controller
      operationId: createManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseManga'
  /api/v1/like/get:
    post:
      tags:
      - like-controller
      operationId: getLikeManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetLikeMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetLikeMangaResponseDTO'
  /api/v1/like/create:
    post:
      tags:
      - like-controller
      operationId: createLikeManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLikeMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreateLikeMangaResponseDTO'
  /api/v1/history/createOrUpdate:
    post:
      tags:
      - history-controller
      operationId: createOrEditHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrEditHistoryRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/genre/create:
    post:
      tags:
      - genre-controller
      operationId: createGenre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGenreRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGenre'
  /api/v1/follow/get:
    post:
      tags:
      - follow-controller
      operationId: getListFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListFollowRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageGetMangaResponseDTO'
  /api/v1/follow/get/by/manga:
    post:
      tags:
      - follow-controller
      operationId: getFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetFollowByMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetFollowByMangaResponseDTO'
  /api/v1/follow/create:
    post:
      tags:
      - follow-controller
      operationId: createFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFollowRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreateFollowResponseDTO'
  /api/v1/file/user/profile/upload:
    post:
      tags:
      - file-controller
      operationId: uploadProfile
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/file/user/manage/profile/upload:
    post:
      tags:
      - file-controller
      operationId: uploadProfileUser
      parameters:
      - name: userId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/file/manga/image/upload:
    post:
      tags:
      - file-controller
      operationId: uploadImageManga
      parameters:
      - name: mangaId
        in: query
        required: true
        schema:
          type: integer
          format: int64
      - name: target
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/file/image/chapter/all:
    post:
      tags:
      - file-controller
      operationId: getAllImageUrlChapter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllImageUrlChapterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListString'
  /api/v1/comment/manga/get:
    post:
      tags:
      - manga-comment-controller
      operationId: getMangaCommentList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListMangaCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageMangaComment'
  /api/v1/comment/manga/create:
    post:
      tags:
      - manga-comment-controller
      operationId: createMangaComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMangaCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreateMangaCommentResponseDTO'
  /api/v1/comment/chapter/get:
    post:
      tags:
      - chapter-comment-controller
      operationId: getChapterCommentList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListChapterCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageChapterComment'
  /api/v1/comment/chapter/create:
    post:
      tags:
      - chapter-comment-controller
      operationId: createChapterComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChapterCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseCreateChapterCommentResponseDTO'
  /api/v1/chapter/get:
    post:
      tags:
      - chapter-controller
      operationId: getChapterByManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListChapterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListChapter'
  /api/v1/chapter/get/detail:
    post:
      tags:
      - chapter-controller
      operationId: getChapterDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChapterDetailRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetChapterDetailResponseDTO'
  /api/v1/chapter/create:
    post:
      tags:
      - chapter-controller
      operationId: createChapter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChapterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseChapter'
  /api/v1/author/search/byName:
    post:
      tags:
      - author-controller
      operationId: getAuthorListByName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListAuthorByNameDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageAuthor'
  /api/v1/author/get:
    post:
      tags:
      - author-controller
      operationId: getListAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetListAuthorRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponsePageAuthor'
  /api/v1/author/detail:
    post:
      tags:
      - author-controller
      operationId: getAuthorDetail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAuthorDetailRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAuthor'
  /api/v1/author/create:
    post:
      tags:
      - author-controller
      operationId: createAuthor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthorRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseAuthor'
  /api/v1/auth/register:
    post:
      tags:
      - auth-controller
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegisterRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/auth/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLoginRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseUserLoginResponseDTO'
  /api/v1/privacyPolicy/all:
    get:
      tags:
      - privacy-policy-controller
      operationId: getAllPrivacyPolicy
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListPrivacyPolicy'
  /api/v1/manga/get/top:
    get:
      tags:
      - manga-controller
      operationId: getTopManga
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGetMangaTopResponseDTO'
  /api/v1/history/get:
    get:
      tags:
      - history-controller
      operationId: getListHistoryByUser
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetListHistoryResponseDTO'
  /api/v1/genre/{id}:
    get:
      tags:
      - genre-controller
      operationId: getGenreById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGenre'
  /api/v1/genre/all:
    get:
      tags:
      - genre-controller
      operationId: getAllGenre
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListGenre'
  /api/v1/file/user/profile/{username}:
    get:
      tags:
      - file-controller
      operationId: getImageProfile
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/file/user/profile/manage/{userId}:
    get:
      tags:
      - file-controller
      operationId: getImageProfileUser
      parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/file/manga/image-logo/{mangaId}:
    get:
      tags:
      - file-controller
      operationId: getImageLogoManga
      parameters:
      - name: mangaId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/file/manga/image-large/{mangaId}:
    get:
      tags:
      - file-controller
      operationId: getImageLargeManga
      parameters:
      - name: mangaId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/file/image/manga/{mangaId}/chapter/{chapterId}/{imageName}:
    get:
      tags:
      - file-controller
      operationId: getImageChapter
      parameters:
      - name: mangaId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: chapterId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: imageName
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /api/v1/author/all:
    get:
      tags:
      - author-controller
      operationId: getAllAuthor
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseListAuthor'
  /api/v1/auth/info:
    get:
      tags:
      - auth-controller
      operationId: getAuthInfo
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseGetAuthInfoResponseDTO'
  /api/v1/like/delete:
    delete:
      tags:
      - like-controller
      operationId: deleteLikeManga
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteLikeMangaRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/history/delete:
    delete:
      tags:
      - history-controller
      operationId: deleteHistory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHistoryRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/genre/delete:
    delete:
      tags:
      - genre-controller
      operationId: deleteGenre
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGenreRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/follow/delete:
    delete:
      tags:
      - follow-controller
      operationId: deleteFollow
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteFollowRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/comment/manga/delete:
    delete:
      tags:
      - manga-comment-controller
      operationId: deleteMangaComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteMangaCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
  /api/v1/comment/chapter/delete:
    delete:
      tags:
      - chapter-comment-controller
      operationId: deleteChapterComment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteChapterCommentRequestDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponseObject'
components:
  schemas:
    UpdateStatusUserRequestDTO:
      required:
      - userId
      - userStatusId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        userStatusId:
          type: integer
          format: int32
    ApiResponseObject:
      type: object
      properties:
        result:
          type: object
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdatePasswordUserRequestDTO:
      required:
      - newPassword
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        newPassword:
          type: string
    UpdateInfoUserRequestDTO:
      required:
      - fullName
      - genderId
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
        fullName:
          type: string
        genderId:
          type: integer
          format: int32
    UpdateOutLawReportRequestDTO:
      required:
      - outLawReportId
      - outLawReportProcessStatus
      type: object
      properties:
        outLawReportId:
          type: integer
          format: int64
        outLawReportProcessStatus:
          type: integer
          format: int32
    ApiResponseOutLawReport:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/OutLawReport'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    Gender:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Level:
      type: object
      properties:
        id:
          type: integer
          format: int64
        point:
          type: integer
          format: int64
    OutLawArea:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    OutLawProcessStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    OutLawReport:
      type: object
      properties:
        id:
          type: integer
          format: int64
        userReported:
          $ref: '#/components/schemas/User'
        commentReported:
          type: integer
          format: int64
        description:
          type: string
        uploadedBy:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        outLawProcessStatus:
          $ref: '#/components/schemas/OutLawProcessStatus'
        outLawType:
          $ref: '#/components/schemas/OutLawType'
        outLawArea:
          $ref: '#/components/schemas/OutLawArea'
    OutLawType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        fullName:
          type: string
        email:
          type: string
        role:
          type: string
        dateOfBirth:
          type: string
        phoneNumber:
          type: string
        createdAt:
          type: string
          format: date-time
        gender:
          $ref: '#/components/schemas/Gender'
        userStatus:
          $ref: '#/components/schemas/UserStatus'
        level:
          $ref: '#/components/schemas/Level'
    UserStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    UpdateErrorChapterReportRequestDTO:
      required:
      - errorChapterReportId
      - errorReportStatusId
      type: object
      properties:
        errorChapterReportId:
          type: integer
          format: int64
        errorReportStatusId:
          type: integer
          format: int32
    ApiResponseErrorChapterReport:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/ErrorChapterReport'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ErrorChapterReport:
      type: object
      properties:
        id:
          type: integer
          format: int64
        description:
          type: string
        uploadedBy:
          $ref: '#/components/schemas/User'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        errorReportStatus:
          $ref: '#/components/schemas/ErrorReportStatus'
    ErrorReportStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        chapterReportList:
          type: array
          items:
            $ref: '#/components/schemas/ErrorChapterReport'
    UpdatePrivacyPolicyRequestDTO:
      required:
      - answer
      - id
      - question
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          type: string
        answer:
          type: string
    ApiResponsePrivacyPolicy:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PrivacyPolicy'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    PrivacyPolicy:
      type: object
      properties:
        id:
          type: integer
          format: int32
        question:
          type: string
        answer:
          type: string
        updatedBy:
          $ref: '#/components/schemas/User'
        updatedAt:
          type: string
          format: date-time
    UpdateMangaRequestDTO:
      required:
      - ageRangeId
      - description
      - listAuthorId
      - listGenreId
      - mangaId
      - mangaStatusId
      - name
      - otherName
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        name:
          type: string
        otherName:
          type: string
        description:
          type: string
        listGenreId:
          type: array
          items:
            type: integer
            format: int32
        listAuthorId:
          type: array
          items:
            type: integer
            format: int32
        ageRangeId:
          type: integer
          format: int32
        mangaStatusId:
          type: integer
          format: int32
    AgeRange:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    ApiResponseManga:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Manga'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    Author:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Chapter:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        updatedAt:
          type: string
          format: date-time
    Follow:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    GenreManga:
      type: object
      properties:
        id:
          type: integer
          format: int64
        genre:
          $ref: '#/components/schemas/Genre'
    LikeManga:
      type: object
      properties:
        id:
          type: integer
          format: int64
    Manga:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        otherName:
          type: string
        description:
          type: string
        mangaStatus:
          $ref: '#/components/schemas/MangaStatus'
        viewManga:
          $ref: '#/components/schemas/ViewManga'
        genreMangaList:
          type: array
          items:
            $ref: '#/components/schemas/GenreManga'
        mangaAuthorList:
          type: array
          items:
            $ref: '#/components/schemas/MangaAuthor'
        chapterList:
          type: array
          items:
            $ref: '#/components/schemas/Chapter'
        likeMangaList:
          type: array
          items:
            $ref: '#/components/schemas/LikeManga'
        followList:
          type: array
          items:
            $ref: '#/components/schemas/Follow'
        ageRange:
          $ref: '#/components/schemas/AgeRange'
    MangaAuthor:
      type: object
      properties:
        id:
          type: integer
          format: int64
        author:
          $ref: '#/components/schemas/Author'
    MangaStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    ViewManga:
      type: object
      properties:
        id:
          type: integer
          format: int64
        numberOfViews:
          type: integer
          format: int64
    UpdateGenreRequestDTO:
      required:
      - description
      - genreId
      - name
      type: object
      properties:
        genreId:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    ApiResponseGenre:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Genre'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdateChapterRequestDTO:
      required:
      - chapterId
      - name
      type: object
      properties:
        chapterId:
          type: integer
          format: int64
        name:
          type: string
    ApiResponseChapter:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Chapter'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdateAuthorRequestDTO:
      required:
      - authorId
      - name
      type: object
      properties:
        authorId:
          type: integer
          format: int32
        name:
          type: string
    ApiResponseAuthor:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/Author'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdateAuthPasswordRequestDTO:
      required:
      - newPassword
      - oldPassword
      type: object
      properties:
        oldPassword:
          type: string
        newPassword:
          type: string
    ApiResponseUpdateAuthPasswordResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UpdateAuthPasswordResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UpdateAuthPasswordResponseDTO:
      type: object
      properties:
        newToken:
          type: string
    UpdateInfoProfileRequestDTO:
      required:
      - fullName
      - genderId
      type: object
      properties:
        fullName:
          type: string
        genderId:
          type: integer
          format: int32
    GetUserListRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    ApiResponsePageGetUserManagementResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageGetUserManagementResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetUserManagementResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        fullName:
          type: string
        email:
          type: string
        role:
          type: string
        dateOfBirth:
          type: string
        phoneNumber:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        userStatus:
          $ref: '#/components/schemas/UserStatus'
        level:
          $ref: '#/components/schemas/Level'
    PageGetUserManagementResponseDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/GetUserManagementResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/SortObject'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    GetUserDetailRequestDTO:
      required:
      - userId
      type: object
      properties:
        userId:
          type: integer
          format: int64
    ApiResponseGetUserManagementResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetUserManagementResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetListOutLawReportRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    ApiResponsePageOutLawReport:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageOutLawReport'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    PageOutLawReport:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/OutLawReport'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    GetOutLawReportByIdRequestDTO:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateOutLawReportRequestDTO:
      required:
      - description
      - outLawAreaId
      - outLawTypeId
      - userReportedId
      type: object
      properties:
        userReportedId:
          type: integer
          format: int64
        commentReportedId:
          type: integer
          format: int64
        description:
          type: string
        outLawTypeId:
          type: integer
          format: int32
        outLawAreaId:
          type: integer
          format: int32
    GetListErrorChapterReportRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    ApiResponsePageErrorChapterReport:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageErrorChapterReport'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    PageErrorChapterReport:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ErrorChapterReport'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    GetErrorChapterReportByIdRequestDTO:
      required:
      - idErrorChapterReport
      type: object
      properties:
        idErrorChapterReport:
          type: integer
          format: int64
    CreateErrorChapterReportRequestDTO:
      required:
      - chapterId
      - description
      - errorTypeId
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        chapterId:
          type: integer
          format: int64
        description:
          type: string
        errorTypeId:
          type: integer
          format: int32
    GetPrivacyPolicyDetailRequestDTO:
      required:
      - privacyPolicyId
      type: object
      properties:
        privacyPolicyId:
          type: integer
          format: int32
    CreatePrivacyPolicyRequestDTO:
      required:
      - answer
      - question
      type: object
      properties:
        question:
          type: string
        answer:
          type: string
    GetMangaByNameRequestDTO:
      required:
      - name
      - orderBy
      - otherName
      - page
      - size
      type: object
      properties:
        name:
          type: string
        otherName:
          type: string
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderBy:
          type: string
    ApiResponsePageGetMangaResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageGetMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetMangaResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        otherName:
          type: string
        description:
          type: string
        updatedBy:
          $ref: '#/components/schemas/User'
        mangaStatus:
          $ref: '#/components/schemas/MangaStatus'
        viewManga:
          $ref: '#/components/schemas/ViewManga'
        genreMangaList:
          type: array
          items:
            $ref: '#/components/schemas/GenreManga'
        mangaAuthorList:
          type: array
          items:
            $ref: '#/components/schemas/MangaAuthor'
        chapterList:
          type: array
          items:
            $ref: '#/components/schemas/Chapter'
        numberOfFollow:
          type: integer
          format: int32
        numberOfLikes:
          type: integer
          format: int32
        ageRange:
          $ref: '#/components/schemas/AgeRange'
        createdAt:
          type: string
          format: date-time
    PageGetMangaResponseDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/GetMangaResponseDTO'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    GetMangaByGenreRequestDTO:
      required:
      - genreId
      - orderBy
      - page
      - size
      type: object
      properties:
        genreId:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderBy:
          type: string
    GetMangaByFilterRequestDTO:
      required:
      - genreApproveList
      - genreDenyList
      - mangaStatus
      - orderBy
      - page
      - size
      type: object
      properties:
        genreApproveList:
          type: array
          items:
            type: integer
            format: int32
        genreDenyList:
          type: array
          items:
            type: integer
            format: int32
        mangaStatus:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderBy:
          type: string
    GetMangaByAuthorDTO:
      required:
      - authorId
      type: object
      properties:
        authorId:
          type: integer
          format: int32
    ApiResponseListGetMangaResponseDTO:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/GetMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetMangaRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    GetMangaListByUploadChapterRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    GetMangaDetailRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseGetMangaResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CreateMangaRequestDTO:
      required:
      - ageRangeId
      - description
      - firstChapterName
      - listAuthorId
      - listGenreId
      - name
      - otherName
      type: object
      properties:
        name:
          type: string
        otherName:
          type: string
        firstChapterName:
          type: string
        description:
          type: string
        listGenreId:
          type: array
          items:
            type: integer
            format: int32
        listAuthorId:
          type: array
          items:
            type: integer
            format: int32
        ageRangeId:
          type: integer
          format: int32
    GetLikeMangaRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseGetLikeMangaResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetLikeMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetLikeMangaResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateLikeMangaRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseCreateLikeMangaResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CreateLikeMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CreateLikeMangaResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateOrEditHistoryRequestDTO:
      required:
      - chapterId
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        chapterId:
          type: integer
          format: int64
    CreateGenreRequestDTO:
      required:
      - description
      - name
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    GetListFollowRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    GetFollowByMangaRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseGetFollowByMangaResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetFollowByMangaResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetFollowByMangaResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
    CreateFollowRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseCreateFollowResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CreateFollowResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CreateFollowResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
    GetAllImageUrlChapterRequestDTO:
      required:
      - chapterId
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        chapterId:
          type: integer
          format: int64
    ApiResponseListString:
      type: object
      properties:
        result:
          type: array
          items:
            type: string
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetListMangaCommentRequestDTO:
      required:
      - mangaId
      - orderBy
      - page
      - size
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderBy:
          type: string
    ApiResponsePageMangaComment:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageMangaComment'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    MangaComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
    PageMangaComment:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/MangaComment'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    CreateMangaCommentRequestDTO:
      required:
      - content
      - mangaId
      type: object
      properties:
        content:
          type: string
        mangaId:
          type: integer
          format: int64
    ApiResponseCreateMangaCommentResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CreateMangaCommentResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CreateMangaCommentResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
    GetListChapterCommentRequestDTO:
      required:
      - chapterId
      - orderBy
      - page
      - size
      type: object
      properties:
        chapterId:
          type: integer
          format: int64
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        orderBy:
          type: string
    ApiResponsePageChapterComment:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageChapterComment'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ChapterComment:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
    PageChapterComment:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/ChapterComment'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    CreateChapterCommentRequestDTO:
      required:
      - chapterId
      - content
      type: object
      properties:
        content:
          type: string
        chapterId:
          type: integer
          format: int64
    ApiResponseCreateChapterCommentResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/CreateChapterCommentResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    CreateChapterCommentResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        content:
          type: string
    GetListChapterRequestDTO:
      required:
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
    ApiResponseListChapter:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Chapter'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetChapterDetailRequestDTO:
      required:
      - chapterId
      - mangaId
      type: object
      properties:
        mangaId:
          type: integer
          format: int64
        chapterId:
          type: integer
          format: int64
    ApiResponseGetChapterDetailResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetChapterDetailResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetChapterDetailResponseDTO:
      required:
      - chapter
      - manga
      type: object
      properties:
        manga:
          $ref: '#/components/schemas/Manga'
        chapter:
          $ref: '#/components/schemas/Chapter'
        previousChapterId:
          type: integer
          format: int64
        nextChapterId:
          type: integer
          format: int64
    CreateChapterRequestDTO:
      required:
      - mangaId
      - name
      type: object
      properties:
        name:
          type: string
        mangaId:
          type: integer
          format: int64
    GetListAuthorByNameDTO:
      required:
      - name
      - page
      - size
      type: object
      properties:
        name:
          type: string
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    ApiResponsePageAuthor:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/PageAuthor'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    PageAuthor:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        number:
          type: integer
          format: int32
        sort:
          $ref: '#/components/schemas/SortObject'
        pageable:
          $ref: '#/components/schemas/PageableObject'
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    GetListAuthorRequestDTO:
      required:
      - page
      - size
      type: object
      properties:
        page:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
    GetAuthorDetailRequestDTO:
      required:
      - authorId
      type: object
      properties:
        authorId:
          type: integer
          format: int32
    CreateAuthorRequestDTO:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    UserRegisterRequestDTO:
      required:
      - dateOfBirth
      - email
      - fullName
      - genderId
      - password
      - phoneNumber
      - role
      - username
      type: object
      properties:
        username:
          type: string
        fullName:
          type: string
        role:
          type: string
        password:
          type: string
        email:
          type: string
        dateOfBirth:
          type: string
        phoneNumber:
          type: string
        genderId:
          type: integer
          format: int32
    UserLoginRequestDTO:
      required:
      - loginID
      - password
      type: object
      properties:
        loginID:
          type: string
        password:
          type: string
    ApiResponseUserLoginResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/UserLoginResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    UserLoginResponseDTO:
      type: object
      properties:
        tokenBearer:
          type: string
    ApiResponseListPrivacyPolicy:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/PrivacyPolicy'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseListGetMangaTopResponseDTO:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/GetMangaTopResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetMangaTopResponseDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        otherName:
          type: string
        description:
          type: string
        updatedBy:
          type: integer
          format: int64
        mangaStatus:
          $ref: '#/components/schemas/MangaStatus'
        viewManga:
          $ref: '#/components/schemas/ViewManga'
        genreMangaList:
          type: array
          items:
            $ref: '#/components/schemas/GenreManga'
        mangaAuthorList:
          type: array
          items:
            $ref: '#/components/schemas/MangaAuthor'
        lastChapter:
          $ref: '#/components/schemas/Chapter'
        numberOfFollow:
          type: integer
          format: int32
        numberOfLikes:
          type: integer
          format: int32
    ApiResponseGetListHistoryResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetListHistoryResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetListHistoryResponseDTO:
      type: object
      properties:
        historyResponseList:
          type: array
          items:
            $ref: '#/components/schemas/HistoryResponse'
    HistoryResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        getMangaResponseDTO:
          $ref: '#/components/schemas/GetMangaResponseDTO'
        chapter:
          $ref: '#/components/schemas/Chapter'
    ApiResponseListGenre:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseListAuthor:
      type: object
      properties:
        result:
          type: array
          items:
            $ref: '#/components/schemas/Author'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    ApiResponseGetAuthInfoResponseDTO:
      type: object
      properties:
        result:
          $ref: '#/components/schemas/GetAuthInfoResponseDTO'
        errorCode:
          type: string
        message:
          type: string
        responseCode:
          type: integer
          format: int32
    GetAuthInfoResponseDTO:
      type: object
      properties:
        username:
          type: string
        fullName:
          type: string
        dateOfBirth:
          type: string
        email:
          type: string
        phoneNumber:
          type: string
        gender:
          $ref: '#/components/schemas/Gender'
        level:
          $ref: '#/components/schemas/Level'
    DeleteLikeMangaRequestDTO:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    DeleteHistoryRequestDTO:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    DeleteGenreRequestDTO:
      required:
      - genreId
      type: object
      properties:
        genreId:
          type: integer
          format: int32
    DeleteFollowRequestDTO:
      required:
      - id
      type: object
      properties:
        id:
          type: integer
          format: int64
    DeleteMangaCommentRequestDTO:
      required:
      - mangaCommentId
      type: object
      properties:
        mangaCommentId:
          type: integer
          format: int64
    DeleteChapterCommentRequestDTO:
      required:
      - chapterCommentId
      type: object
      properties:
        chapterCommentId:
          type: integer
          format: int64
